<Window x:Class="FarmProductsWPF.stock_popup.StockDetailsPopup"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FarmProductsWPF.stock_popup"
        mc:Ignorable="d"
        Title="Stock Update History" 
        Height="600" 
        Width="1200"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        ResizeMode="CanResize"
        Background="Transparent"
        AllowsTransparency="True" Loaded="Window_Loaded">

    <Window.Resources>
        <!-- Close Button Style -->
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="#6B7280"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F3F4F6"/>
                                <Setter Property="Foreground" Value="#374151"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Header Info Style -->
        <Style x:Key="HeaderLabelStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="#6B7280"/>
            <Setter Property="Margin" Value="0,0,0,4"/>
        </Style>

        <Style x:Key="HeaderValueStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#1F2937"/>
        </Style>

        <!-- Dynamic Status Pill Style -->
        <Style x:Key="DynamicStatusPillStyle" TargetType="Border">
            <Setter Property="Background" Value="#E8F5E9"/>
            <Setter Property="BorderBrush" Value="#81C784"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <!-- Out of Stock -->
                <DataTrigger Binding="{Binding ElementName=txtStatus, Path=Text}" Value="Out of Stock">
                    <Setter Property="Background" Value="#FEE2E2"/>
                    <Setter Property="BorderBrush" Value="#FCA5A5"/>
                </DataTrigger>
                <!-- Low Stock -->
                <DataTrigger Binding="{Binding ElementName=txtStatus, Path=Text}" Value="Low Stock">
                    <Setter Property="Background" Value="#FEF3C7"/>
                    <Setter Property="BorderBrush" Value="#FCD34D"/>
                </DataTrigger>
                <!-- In Stock (default state) -->
                <DataTrigger Binding="{Binding ElementName=txtStatus, Path=Text}" Value="In Stock">
                    <Setter Property="Background" Value="#E8F5E9"/>
                    <Setter Property="BorderBrush" Value="#81C784"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Dynamic Status Text Style -->
        <Style x:Key="DynamicStatusTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#2E7D32"/>
            <Style.Triggers>
                <!-- Out of Stock -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="Out of Stock">
                    <Setter Property="Foreground" Value="#DC2626"/>
                </DataTrigger>
                <!-- Low Stock -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="Low Stock">
                    <Setter Property="Foreground" Value="#B45309"/>
                </DataTrigger>
                <!-- In Stock -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="In Stock">
                    <Setter Property="Foreground" Value="#2E7D32"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Update Stock Button Style -->
        <Style x:Key="UpdateStockButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#1F2937"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#374151"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Close Text Button Style -->
        <Style x:Key="CloseTextButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#6B7280"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F3F4F6"/>
                                <Setter Property="Foreground" Value="#374151"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Style -->
        <Style x:Key="HistoryDataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#F3F4F6"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#FAFBFC"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserSortColumns" Value="False"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="RowHeight" Value="48"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Style.Resources>
                <!-- Define cell style that preserves text color -->
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#E3F2FD"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <!-- Keep the foreground color of the cell content -->
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <!-- Remove focus visual styles -->
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#E3F2FD"/>
                            <!-- Keep the foreground color -->
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F5F5F5"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>

        <!-- DataGrid Header Style -->
        <Style x:Key="HistoryColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#27AE60"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,12"/>
            <Setter Property="BorderThickness" Value="0,0,1,0"/>
            <Setter Property="BorderBrush" Value="#5a6268"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <!-- Cancel Button Style -->
        <Style x:Key="CancelButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="BorderBrush" Value="#E5E7EB"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F3F4F6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CreateButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border CornerRadius="10" Background="White" BorderThickness="1" BorderBrush="#DDDDDD">
        <Grid Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <Grid Grid.Row="0" Margin="0,0,0,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Title -->
                <StackPanel Grid.Column="0">
                    <TextBlock Text="Stock Update History"
                              FontSize="20"
                              FontWeight="Bold"
                              Foreground="#1F2937"
                              Margin="0,0,0,4"/>
                    <TextBlock x:Name="txtSubtitle"
                              Text="{Binding ProductSubtitle, FallbackValue='View all stock updates for Organic Tomatoes'}"
                              FontSize="14"
                              Foreground="#6B7280"/>
                </StackPanel>

                <!-- Close Button -->
                <Button Grid.Column="1"
                        Style="{StaticResource CloseButtonStyle}"
                        Content="✕"
                        Click="CloseButton_Click"/>
            </Grid>

            <!-- Product Information Header -->
            <Border Grid.Row="1" 
                    Background="#F8FAFC" 
                    Margin="0,0,0,20" 
                    CornerRadius="8"
                    Padding="20">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Product -->
                    <StackPanel Grid.Column="0" HorizontalAlignment="Center">
                        <TextBlock Text="Product" HorizontalAlignment="Center" Style="{StaticResource HeaderLabelStyle}"/>
                        <TextBlock x:Name="txtProductName"  HorizontalAlignment="Center"
                                  Text="{Binding ProductName, FallbackValue='Organic Tomatoes'}"
                                  Style="{StaticResource HeaderValueStyle}"
                                  Foreground="#2563EB"/>
                    </StackPanel>

                    <!-- Current Stock -->
                    <StackPanel Grid.Column="1" HorizontalAlignment="Center">
                        <TextBlock Text="Current Stock" HorizontalAlignment="Center" Style="{StaticResource HeaderLabelStyle}"/>
                        <TextBlock x:Name="txtCurrentStock"  HorizontalAlignment="Center"
                                  Text="{Binding CurrentStock, FallbackValue='25 kg'}"
                                  Style="{StaticResource HeaderValueStyle}"/>
                    </StackPanel>

                    <!-- Category -->
                    <StackPanel Grid.Column="2" HorizontalAlignment="Center">
                        <TextBlock Text="Category" HorizontalAlignment="Center" Style="{StaticResource HeaderLabelStyle}"/>
                        <TextBlock x:Name="txtCategory"  HorizontalAlignment="Center"
                                  Text="{Binding Category, FallbackValue='Vegetables'}"
                                  Style="{StaticResource HeaderValueStyle}"
                                  Foreground="#2563EB"/>
                    </StackPanel>

                    <!-- Status -->
                    <StackPanel Grid.Column="3" HorizontalAlignment="Center">
                        <TextBlock Text="Status" HorizontalAlignment="Center" Style="{StaticResource HeaderLabelStyle}"/>
                        <Border x:Name="statusPill" Style="{StaticResource DynamicStatusPillStyle}">
                            <TextBlock x:Name="txtStatus" HorizontalAlignment="Center" Style="{StaticResource DynamicStatusTextStyle}"/>
                        </Border>
                    </StackPanel>
                </Grid>
            </Border>

            <!-- History Table -->
            <DataGrid x:Name="dgStockHistory"
                      Grid.Row="2"
                      Style="{StaticResource HistoryDataGridStyle}"
                      ColumnHeaderStyle="{StaticResource HistoryColumnHeaderStyle}"
                      Margin="0,0,0,20"
                      ItemsSource="{Binding StockHistory}"
                      AutoGenerateColumns="False"
                      d:ItemsSource="{d:SampleData ItemCount=5}"
                      BorderThickness="0"
                      HorizontalScrollBarVisibility="Disabled" Loaded="dgStockHistory_Loaded">
                <DataGrid.Columns>
                    <!-- Date Column -->
                    <DataGridTextColumn Header="Date" 
                                        Width="200" 
                                        Binding="{Binding UpdateDate}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="16,0"/>
                                <Setter Property="FontSize" Value="13"/>
                                <Setter Property="Foreground" Value="#374151"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Before Column -->
                    <DataGridTextColumn Header="Before" 
                                        Width="80" 
                                        Binding="{Binding BeforeQuantity}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="FontSize" Value="13"/>
                                <Setter Property="FontWeight" Value="Medium"/>
                                <Setter Property="Foreground" Value="#374151"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Change Column -->
                    <DataGridTextColumn Header="Change" 
                                        Width="80" 
                                        Binding="{Binding ChangeAmount}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="FontSize" Value="13"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPositiveChange}" Value="True">
                                        <Setter Property="Foreground" Value="#16A34A"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsPositiveChange}" Value="False">
                                        <Setter Property="Foreground" Value="#DC2626"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- After Column -->
                    <DataGridTextColumn Header="After" 
                                        Width="80" 
                                        Binding="{Binding AfterQuantity}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="FontSize" Value="13"/>
                                <Setter Property="FontWeight" Value="Medium"/>
                                <Setter Property="Foreground" Value="#374151"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Notes Column -->
                    <DataGridTextColumn Header="Notes" 
                                        Width="*" 
                                        Binding="{Binding Notes}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="16,0"/>
                                <Setter Property="FontSize" Value="13"/>
                                <Setter Property="Foreground" Value="#6B7280"/>
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Updated By Column -->
                    <DataGridTextColumn Header="Updated By" 
                                        Width="200" 
                                        Binding="{Binding UpdatedBy}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="16,0"/>
                                <Setter Property="FontSize" Value="13"/>
                                <Setter Property="Foreground" Value="#374151"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            <!-- Footer Buttons -->
            <Grid Grid.Row="3" Margin="24,0,24,24">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Spacer -->
                <Rectangle Grid.Column="0" Fill="Transparent"/>

                <!-- Cancel Button -->
                <Button Grid.Column="1"
                        Content="Close"
                        Style="{StaticResource CancelButtonStyle}"
                        Click="CloseButton_Click"
                        Margin="0,0,12,0"
                        Width="100"/>

                <!-- Close and Update Stock Button -->
                <Button Grid.Column="2"
                        Content="Update Stock"
                        Style="{StaticResource CreateButtonStyle}"
                        Click="UpdateStockButton_Click" Margin="10,0,0,0"/>
            </Grid>
        </Grid>
    </Border>
</Window>